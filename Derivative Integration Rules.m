(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Code:: *)
Int[Derivative[n_][f_][x_],x_Symbol] :=
  Derivative[n-1][f][x] /;
FreeQ[{f,n},x]


(* ::Code:: *)
Int[(c_.*F_^(a_.+b_.*x_))^p_.*Derivative[n_][f_][x_],x_Symbol] :=
  (c*F^(a+b*x))^p*Derivative[n-1][f][x] - b*p*Log[F]*Int[(c*F^(a+b*x))^p*Derivative[n-1][f][x],x] /;
FreeQ[{a,b,c,f,F,p},x] && PositiveIntegerQ[n]


(* ::Code:: *)
Int[(c_.*F_^(a_.+b_.*x_))^p_.*Derivative[n_][f_][x_],x_Symbol] :=
  (c*F^(a+b*x))^p*Derivative[n][f][x]/(b*p*Log[F]) - 1/(b*p*Log[F])*Int[(c*F^(a+b*x))^p*Derivative[n+1][f][x],x] /;
FreeQ[{a,b,c,f,F,p},x] && NegativeIntegerQ[n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*Derivative[n_][f_][x_],x_Symbol] :=
  Sin[a+b*x]*Derivative[n-1][f][x] - b*Int[Cos[a+b*x]*Derivative[n-1][f][x],x] /;
FreeQ[{a,b,f},x] && PositiveIntegerQ[n]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*Derivative[n_][f_][x_],x_Symbol] :=
  Cos[a+b*x]*Derivative[n-1][f][x] + b*Int[Sin[a+b*x]*Derivative[n-1][f][x],x] /;
FreeQ[{a,b,f},x] && PositiveIntegerQ[n]


(* ::Code:: *)
Int[Sin[a_.+b_.*x_]*Derivative[n_][f_][x_],x_Symbol] :=
  -Cos[a+b*x]*Derivative[n][f][x]/b + 1/b*Int[Cos[a+b*x]*Derivative[n+1][f][x],x] /;
FreeQ[{a,b,f},x] && NegativeIntegerQ[n]


(* ::Code:: *)
Int[Cos[a_.+b_.*x_]*Derivative[n_][f_][x_],x_Symbol] :=
  Sin[a+b*x]*Derivative[n][f][x]/b - 1/b*Int[Sin[a+b*x]*Derivative[n+1][f][x],x] /;
FreeQ[{a,b,f},x] && NegativeIntegerQ[n]


(* ::Code:: *)
Int[u_*Derivative[n_][f_][x_],x_Symbol] :=
  Subst[Int[SimplifyIntegrand[SubstFor[Derivative[n-1][f][x],u,x],x],x],x,Derivative[n-1][f][x]] /;
FreeQ[{f,n},x] && FunctionOfQ[Derivative[n-1][f][x],u,x]


(* ::Code:: *)
Int[f_'[x_]*g_[x_] + f_[x_]*g_'[x_],x_Symbol] :=
  f[x]*g[x] /;
FreeQ[{f,g},x]


(* ::Code:: *)
Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/g_[x_]^2,x_Symbol] :=
  f[x]/g[x] /;
FreeQ[{f,g},x]


(* ::Code:: *)
Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]*g_[x_]),x_Symbol] :=
  Log[f[x]/g[x]] /;
FreeQ[{f,g},x]


(* ::Code:: *)
Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]^2 + g_[x_]^2),x_Symbol] :=
  ArcTan[f[x]/g[x]] /;
FreeQ[{f,g},x]


(* ::Code:: *)
Int[(f_'[x_]*g_[x_] - f_[x_]*g_'[x_])/(f_[x_]^2 - g_[x_]^2),x_Symbol] :=
  -ArcTanh[f[x]/g[x]] /;
FreeQ[{f,g},x]



